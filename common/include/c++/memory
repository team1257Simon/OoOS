#ifndef __MEMORY
#define __MEMORY
#include "bits/stl_allocator.h"
#include "concepts"
#include "bits/move.h"
namespace std
{
    template<typename T, typename ... Args> requires __detail::__dynamic_constructible<T, Args...> constexpr T* construct_at(T* ptr, Args ... args) { return ::new (static_cast<void*>(ptr)) T(std::forward<Args>(args)...); }
    // More as needed
}
#endif